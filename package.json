{
  "name": "custom-text-transform",
  "displayName": "Custom Text Transform",
  "description": "Allows applying arbitrary user-defined transforms to the selected code.",
  "publisher": "phohale",
  "repository": "https://github.com/CommanderPho/vscode-custom-text-transform",
  "icon": "images/vscode_xform_icon.png",
  "version": "0.0.5",
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "type": "webview",
          "id": "custom-text-transform.transformEditorGuiView",
          "name": "Transform Editor GUI"
        }
      ]
    },
    "configuration": {
      "title": "Custom Text Transform",
      "properties": {
        "custom-text-transform.transforms": {
          "type": "array",
          "default": [
            {
              "name": "Variable list into Python dictionary",
              "function": "const variableList = input.split(',').map(varName => varName.trim()); return '{' + variableList.map(varName => `'${varName}':${varName}`).join(', ') + '}'",
              "test_texts": [""]
            },
            {
              "name": "Variable list into kwargs",
              "function": "const variableList = input.split(',').map(varName => varName.trim()); return variableList.map(varName => `${varName}=${varName}`).join(', ')",
              "test_texts": [""]
            },
            {
              "name": "Function definition into classdef method definition",
              "function": "const lines = input.trim().split('\\n');\nconst funcName = lines[0].trim().split(' ')[1].split('(')[0];\nconst args = lines[0].trim().split('(')[1].split(')')[0].split(',').map(arg => arg.trim());\nconst body = lines.slice(1, -1).join('\\n');\nreturn `def ${funcName}(self, ${args.join(', ')}):${body ? '\\n' + body : ''}`",
              "test_texts": [""]
            },
            {
              "name": "Python function definition to kwargs call",
              "function": "return input.replace(/def\\s+(\\w+)\\(([^)]*)\\):[\\s\\S]*/, (_, fnName, params) => fnName + '(' + params.replace(/\\w+\\s*(?:\\:[^=,]+)?\\s*(=\\s*[^,]+)?/g, (p) => p.trim().split('=')[0].trim() + '=' + p.trim().split('=')[0].trim()).split(',').join(', ') + ')')",
              "test_texts": ["def check_for_and_merge_overlapping_epochs(quiescent_periods: pd.DataFrame, debug_print=False) -> pd.DataFrame:"]
            }
          ],
          "description": "Array of custom text transformations",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the transform"
              },
              "function": {
                "type": "string",
                "description": "Transformation function as a string"
              },
              "test_texts": {
                "type": "array",
                "description": "Testing Texts to apply the transformation function to",
                "default": [""],
                "items": {
                  "type": "string",
                  "description": "Test text to apply the transformation to"
                } 
              }
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "custom-text-transform.helloWorld",
        "title": "ðŸŒ€Custom Transform: Hello World"
      },
      {
        "command": "custom-text-transform.listCustomTransforms",
        "title": "ðŸŒ€ðŸ“œList Custom Transforms"
      },
      {
        "command": "custom-text-transform.transformSelectedText",
        "title": "ðŸŒ€ðŸ’«Custom Transform Selected Text..."
      },
      {
        "command": "custom-text-transform.openEditor",
        "title": "ðŸŒ€Custom Transform: Open Transform Editor GUI"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "package": "npm run compile && vsce package",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.88.0",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@vscode-elements/elements": "^1.8.1"
  }
}
